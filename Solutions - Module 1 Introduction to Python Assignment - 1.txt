Module 1: Introduction to Python Assignment - 1

1. Create a list containing squares of numbers from 1 to 10 (HINT: use List Comprehension).

Ans.
def squares(start, end):
    squares = [value ** 2 for value in range(start,end+1)]
    return squares
print(squares(2, 3)) # Should be [4, 9]
print(squares(1, 5)) # Should be [1, 4, 9, 16, 25]
print(squares(0, 10)) # Should be [0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100]

2. Write a Function to check if year number is a leap year
Ans.

def CheckLeap(Year):  
  # Checking if the given year is leap year  
  if((Year % 400 == 0) or  
     (Year % 100 != 0) and  
     (Year % 4 == 0)):   
    print("Given Year is a leap Year");  
  # Else it is not a leap year  
  else:  
    print ("Given Year is not a leap Year")  
# Taking an input year from user  
Year = int(input("Enter the number: "))  
# Printing result  
CheckLeap(Year)  

3. Write a Function to take an array and return another array that contains the members of first
array that are even
Ans:-

array = [1,2,3,4,5,6] 
 
def even(array): 
	new_array = [] 
	for i in array: 
		if i%2==0: 
			new_array.append(i) 
	return new_array 
 
print(even(array))

4 . Write a Function that takes 2 arrays and prints the members of first array that are present of
second array. (HINT: use Membership Comprehension)
Ans :- 

def findMissing(a, b, n, m):
 
    for i in range(n):
        for j in range(m):
            if (a[i] == b[j]):
                break
 
        if (j != m - 1):
            print(a[i], end = " ")
 
# Driver code
if __name__ == "__main__":
     
    a = [ 1, 2, 6, 3, 4, 5 ]
    b = [ 2, 4, 3, 1, 0 ]
    n = len(a)
    m = len(b)
    findMissing(a, b, n, m)